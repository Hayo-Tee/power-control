substitutions:
  power_pin: GPIO7
  reboot_pin: GPIO4
  status_pin: GPIO5
  button_pin: GPIO3
  api_key: !secret power_control_api
  wifi_ssid: !secret wifi_ssid
  wifi_password: !secret wifi_password
  ap_password: !secret ap_password
  server_url: "http://server:8080"

esphome:
  name: pc-power-control
  friendly_name: "PC Power"
  platformio_options:
    build_flags:
      - '-DCONFIG_ESP_CONSOLE_USB_CDC=n'

esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino

uart:
  id: uart_bus
  tx_pin: GPIO21
  rx_pin: GPIO20
  baud_rate: 115200
  data_bits: 8
  parity: NONE
  stop_bits: 1

logger:
  level: DEBUG
  baud_rate: 115200
  logs:
    component.gpio: DEBUG
    multi_click: DEBUG

web_server:
  port: 80

ota:
  - platform: esphome
    password: 1507
  - platform: web_server

wifi:
  ssid: ${wifi_ssid}
  password: ${wifi_password}
  ap:
    ssid: "PC-Control-Fallback"
    password: ${ap_password}

http_request:
  useragent: esphome/pc-power-control
  timeout: 5s
  verify_ssl: false

output:
  - platform: gpio
    pin: ${power_pin}
    id: power_button_output
  - platform: gpio
    pin: ${reboot_pin}
    id: reboot_button_output

binary_sensor:
  - platform: gpio
    pin:
      number: ${status_pin}
      mode: input
    name: "PC Status"
    device_class: power
    id: pc_status

  - platform: gpio
    pin:
      number: ${button_pin}
      mode: INPUT_PULLUP
      inverted: true
    name: "Physical Button"
    id: physical_button
    internal: true
    filters:
      - delayed_on: 100ms  # Уменьшил задержку для более быстрого реагирования
      - delayed_off: 100ms
    on_multi_click:
      - timing:
          - ON for at most 0.3s  # Быстрое нажатие
          - OFF for at least 0.1s  # Минимальная пауза
          - ON for at most 0.3s  # Второе быстрое нажатие
          - OFF for at least 0.1s
        then:
          - logger.log: "Double press detected - stopping VM"
          - http_request.get:
              url: "${server_url}/stop_win.sh"
      - timing:
          - ON for at most 0.5s  # Одиночное нажатие
          - OFF for at least 0.3s
        then:
          - logger.log: "Single press detected - starting VM"
          - http_request.get:
              url: "${server_url}/start_win.sh"
      - timing:
          - ON for at least 4s  # Длинное нажатие (уменьшил время)
          - OFF for at least 0.3s
        then:
          - logger.log: "Long press detected - force stopping VM"
          - http_request.get:
              url: "${server_url}/destroy_win.sh"

sensor:
  - platform: uptime
    name: "Uptime"
  - platform: wifi_signal
    name: "WiFi Signal"
    update_interval: 60s

text_sensor:
  - platform: wifi_info
    ip_address:
      name: "IP Address"

button:
  - platform: template
    name: "Turn On PC"
    icon: "mdi:power"
    entity_category: "config"
    on_press:
      if:
        condition:
          binary_sensor.is_off: pc_status
        then:
          - output.turn_on: power_button_output
          - delay: 500ms
          - output.turn_off: power_button_output
          - http_request.get:
              url: "${server_url}/start_win.sh"

  - platform: template
    name: "Soft Shutdown PC"
    icon: "mdi:power-standby"
    entity_category: "config"
    on_press:
      if:
        condition:
          binary_sensor.is_on: pc_status
        then:
          - http_request.get:
              url: "${server_url}/stop_win.sh"
          - delay: 5s
          - output.turn_on: power_button_output
          - delay: 1s
          - output.turn_off: power_button_output

  - platform: template
    name: "Force Shutdown PC"
    icon: "mdi:power-off"
    entity_category: "config"
    on_press:
      if:
        condition:
          binary_sensor.is_on: pc_status
        then:
          - http_request.get:
              url: "${server_url}/destroy_win.sh"
          - delay: 5s
          - output.turn_on: power_button_output
          - delay: 5s
          - output.turn_off: power_button_output

  - platform: template
    name: "Reboot PC"
    icon: "mdi:restart-alert"
    entity_category: "config"
    on_press:
      - output.turn_on: reboot_button_output
      - delay: 500ms
      - output.turn_off: reboot_button_output

  - platform: template
    name: "Start VM"
    icon: "mdi:server"
    entity_category: "config"
    on_press:
      - http_request.get:
          url: "${server_url}/start_win.sh"

  - platform: template
    name: "Stop VM"
    icon: "mdi:server-off"
    entity_category: "config"
    on_press:
      - http_request.get:
          url: "${server_url}/stop_win.sh"

  - platform: template
    name: "Force Stop VM"
    icon: "mdi:server-remove"
    entity_category: "config"
    on_press:
      - http_request.get:
          url: "${server_url}/destroy_win.sh"

interval:
  - interval: 6h
    then:
      - logger.log: "Scheduled ESP32 restart (every 6 hours)"
      - lambda: |-
          ESP.restart();